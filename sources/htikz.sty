%%
%% This is file `htikz.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% htikz.dtx  (with options: `htikz')
%% Copyright (C) 2012 by Claudio Fiandrino
%% -------------------------------------------
%% 
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3
%% of this license or (at
%%  your option) any later version.
%% The latest version of this license is in:
%% 
%%    http://www.latex-project.org/lppl.txt
%% 
%% and version 1.3 or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%% 
%% This work is "maintained" (as per LPPL maintenance status) by
%% Claudio Fiandrino.
%% 
%% This work consists of the file  htikz.dtx
%% and the derived files           htikz.pdf and
%%                                 htikz.sty.
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{htikz}[2012/04/25 v0.1 A simple way to highlight formulas parts.]
\RequirePackage{tikz}
\RequirePackage{etoolbox}
%% Colors

\definecolor{lightbrown}{RGB}{255,218,195}
\definecolor{violet}{RGB}{197,122,195}

\newcommand{\fcol}{lightbrown}
\newcommand{\bcol}{violet}

%% Package option

\newbool{fill}
\booltrue{fill}
\DeclareOption{nofill}{\boolfalse{fill}}

\DeclareOption{customcolors}{
\def\setfillcolor#1{\def\@fillcolor{#1}}
\def\setbordercolor#1{\def\@bordercolor{#1}}

\renewcommand{\fcol}{\@fillcolor}
\renewcommand{\bcol}{\@bordercolor}
}

\newbool{beamer}
\boolfalse{beamer}
\DeclareOption{beamer}{\booltrue{beamer}}

\ProcessOptions
%% Settings

\ifbool{beamer}{%true
   \newcounter{jumping}
   \resetcounteronoverlays{jumping}

   \def\jump@setbb#1#2#3{%
     \@ifundefined{jump@#1@maxbb}{%
       \expandafter\gdef\csname jump@#1@maxbb\endcsname{#3}%
     }{%
       \csname jump@#1@maxbb\endcsname
       \pgf@xa=\pgf@x
       \pgf@ya=\pgf@y
       #3
       \pgfmathsetlength\pgf@x{max(\pgf@x,\pgf@xa)}%
       \pgfmathsetlength\pgf@y{max(\pgf@y,\pgf@ya)}%
       \expandafter\xdef\csname jump@#1@maxbb\endcsname{\noexpand\pgfpoint{\the\pgf@x}{\the\pgf@y}}%
     }
     \@ifundefined{jump@#1@minbb}{%
       \expandafter\gdef\csname jump@#1@minbb\endcsname{#2}%
     }{%
       \csname jump@#1@minbb\endcsname
       \pgf@xa=\pgf@x
       \pgf@ya=\pgf@y
       #2
       \pgfmathsetlength\pgf@x{min(\pgf@x,\pgf@xa)}%
       \pgfmathsetlength\pgf@y{min(\pgf@y,\pgf@ya)}%
       \expandafter\xdef\csname jump@#1@minbb\endcsname{\noexpand\pgfpoint{\the\pgf@x}{\the\pgf@y}}%
     }
   }

   \tikzset{%
     remember picture with id/.style={%
       remember picture,
       overlay,
       draw=\bcol,
       save picture id=#1,
     },
     save picture id/.code={%
       \edef\pgf@temp{#1}%
       \immediate\write\pgfutil@auxout{%
         \noexpand\savepointas{\pgf@temp}{\pgfpictureid}}%
     },
     if picture id/.code args={#1#2#3}{%
       \@ifundefined{save@pt@#1}{%
         \pgfkeysalso{#3}%
       }{
         \pgfkeysalso{#2}%
       }
     },
     onslide/.code args={<#1>#2}{%
       \only<#1>{\pgfkeysalso{#2}}%
     },
     alt/.code args={<#1>#2#3}{%
       \alt<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}}%
     },
     stop jumping/.style={
       execute at end picture={%
         \stepcounter{jumping}%
         \immediate\write\pgfutil@auxout{%
           \noexpand\jump@setbb{\the\value{jumping}}{\noexpand\pgfpoint{\the\pgf@picminx}{\the\pgf@picminy}}{\noexpand\pgfpoint{\the\pgf@picmaxx}{\the\pgf@picmaxy}}
         },
         \csname jump@\the\value{jumping}@maxbb\endcsname
         \path (\the\pgf@x,\the\pgf@y);
         \csname jump@\the\value{jumping}@minbb\endcsname
         \path (\the\pgf@x,\the\pgf@y);
       },
     }
   }
}{% false
   \tikzset{%
     remember picture with id/.style={%
       remember picture,
       overlay,
       draw=\bcol,
       save picture id=#1,
     },
     save picture id/.code={%
       \edef\pgf@temp{#1}%
       \immediate\write\pgfutil@auxout{%
         \noexpand\savepointas{\pgf@temp}{\pgfpictureid}}%
     },
     if picture id/.code args={#1#2#3}{%
       \@ifundefined{save@pt@#1}{%
         \pgfkeysalso{#3}%
       }{
         \pgfkeysalso{#2}%
       }
     }
   }
}

\def\savepointas#1#2{%
  \expandafter\gdef\csname save@pt@#1\endcsname{#2}%
}

\def\tmk@labeldef#1,#2\@nil{%
  \def\tmk@label{#1}%
  \def\tmk@def{#2}%
}

\tikzdeclarecoordinatesystem{pic}{%
  \pgfutil@in@,{#1}%
  \ifpgfutil@in@%
    \tmk@labeldef#1\@nil
  \else
    \tmk@labeldef#1,\pgfpointorigin\@nil
  \fi
  \@ifundefined{save@pt@\tmk@label}{%
    \tikz@scan@one@point\pgfutil@firstofone\tmk@def
  }{%
  \pgfsys@getposition{\csname save@pt@\tmk@label\endcsname}\save@orig@pic%
  \pgfsys@getposition{\pgfpictureid}\save@this@pic%
  \pgf@process{\pgfpointorigin\save@this@pic}%
  \pgf@xa=\pgf@x
  \pgf@ya=\pgf@y
  \pgf@process{\pgfpointorigin\save@orig@pic}%
  \advance\pgf@x by -\pgf@xa
  \advance\pgf@y by -\pgf@ya
  }%
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ifbool{beamer}{%true
   \ifbool{fill}{%true
      \newcommand<>{\tikzmarkin}[1]{%
      \only#2{\tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners,fill=\fcol]
      (pic cs:#1) ++(0.1,-0.18) rectangle (-0.1,0.35)
      ;}}
      \newcommand<>{\exttikzmarkin}[1]{%
      \only#2{\tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners,fill=\fcol]
      (pic cs:#1) ++(0.1,-0.5) rectangle (-0.1,0.65)
      ;}}
   }{%false
      \newcommand<>{\tikzmarkin}[1]{%
      \only#2{\tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners]
      (pic cs:#1) ++(0.075,-0.18) rectangle (-0.075,0.35)
      ;}}
      \newcommand<>{\exttikzmarkin}[1]{%
      \only#2{\tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners]
      (pic cs:#1) ++(0.1,-0.5) rectangle (-0.1,0.65)
      ;}}
   }
}{%false
      \ifbool{fill}{%true
      \newcommand{\tikzmarkin}[1]{%
      \tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners,fill=\fcol]
      (pic cs:#1) ++(0.1,-0.18) rectangle (-0.1,0.35)
      ;}
      \newcommand{\exttikzmarkin}[1]{%
      \tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners,fill=\fcol]
      (pic cs:#1) ++(0.1,-0.5) rectangle (-0.1,0.65)
      ;}
   }{%false
      \newcommand{\tikzmarkin}[1]{%
      \tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners]
      (pic cs:#1) ++(0.075,-0.18) rectangle (-0.075,0.35)
      ;}
      \newcommand{\extikzmarkin}[1]{%
      \tikz[remember picture with id=#1]
      \draw[line width=1pt,rectangle,rounded corners]
      (pic cs:#1) ++(0.1,-0.5) rectangle (-0.1,0.65)
      ;}
   }

}

\newcommand\tikzmarkend[2][]{%
\tikz[remember picture with id=#2] #1;}

\newcommand\exttikzmarkend[2][]{%
\tikz[remember picture with id=#2] #1;}
\endinput
%%
%% End of file `htikz.sty'.
